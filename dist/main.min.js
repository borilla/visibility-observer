!function(t,i){"object"==typeof exports&&"undefined"!=typeof module?module.exports=i():"function"==typeof define&&define.amd?define(i):t.VisibilityObserver=i()}(this,function(){"use strict";function t(t){this.t=new t.IntersectionObserver(this.i.bind(this)),this.s=new Map}function i(t){this.n=t,this.h={top:0,bottom:0},this.s=new Map,this.e=this.e.bind(this),this.o=this.o.bind(this)}var s=t.prototype;s.observe=function(t,i){this.t.observe(t),this.s.set(t,i)},s.unobserve=function(t){this.t.unobserve(t),this.s.delete(t)},s.i=function(t){var i=this.s;t.forEach(function(t){var s=t.intersectionRatio>0,n=t.target;i.get(n)(s,n)})};var n=t,h=i.prototype;h.observe=function(t,i){var s={top:0,bottom:0,isVisible:null,onVisibilityChanged:i};0===this.s.size&&(this.f(),this.u()),this.s.set(t,s),this.c(s,t)},h.unobserve=function(t){this.s.delete(t),0===this.s.size&&this.r()},h.u=function(){this.n.addEventListener("resize",this.e),this.n.addEventListener("scroll",this.o)},h.r=function(){this.n.removeEventListener("resize",this.e),this.n.removeEventListener("scroll",this.o)},h.f=function(){var t=this.h.top=this.n.scrollY,i=this.n.innerHeight;this.h.bottom=t+i},h.c=function(t,i){t.top=i.offsetTop,t.bottom=t.top+i.offsetHeight,this.a(t,i)},h.a=function(t,i){var s=this.h,n=t.top<s.bottom&&t.bottom>s.top;n!==t.isVisible&&(t.isVisible=n,t.onVisibilityChanged(n,i))},h.e=function(){this.f(),this.s.forEach(this.c,this)},h.o=function(){this.f(),this.s.forEach(this.a,this)};var e=i;return function(t){return"IntersectionObserver"in t&&"IntersectionObserverEntry"in t?new n(t):new e(t)}});
//# sourceMappingURL=main.min.js.map
